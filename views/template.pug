html
  head
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    link(rel='stylesheet' href='static/style.css' id='main-styles-link')
    script(src='static/timer.js')
    script(src='static/check_photolink.js')
    link(rel='shortcut icon' href='/favicon.ico' type='image/x-icon')
    link(rel='icon' href='/favicon.ico' type='image/x-icon')
    script(src='https://code.jquery.com/jquery-3.4.1.min.js', integrity='sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=', crossorigin='anonymous')

  body
    if request == null
      h1 This application is currently in testing and development, so don't get too attached to it.
      p
        a(href = 'https://emag-rq.herokuapp.com/game_builder') Build a Game Here
      p if you want to create your own hunt.
      p Or check out one of the hunts that have been created for inspiration:

      for x in json_data
      //add something like (if json_data.privacy = 'public') [privacy field does not exist yet]
        li
          a(href=print_url+x._id) #{x.game_name}
      p Potential problems you may encounter:
        li Game edits are impossible.
        li Deleting a game is impossible.
        li All games are currently public.
        li Disclaimer: I am likely to accidently delete your game.
        li Contact: emagrq@gmail.com.

    else if request == 'print'
      div.no-print
        p CAUTION: this print page is set to print each code on a separate page for ease of use with index cards.
        //add a toggle option for single page printing or multiple codes per 8.5/11 sheet
        p Consider printing multiple pages per sheet if you are printing on regular office paper.
      ul(style='list-style-type:none; padding: 0')

          each x, index_x in json_data
            li
              div.pagebreak.c
                p #{index_x + 1}:#{x.location}
                img(src=qr_code + 'game_call:' + gameID + '_' + index_x, style='width:336px;height:336px;')

    else
        script.
          window.onload = function() {
            //here is a count down timer if there is a specific time allocated.
            //this is not working right now.
                      /*var display = document.querySelector('#time')
                      timer = new CountDownTimer(#{json_data.time_allocated});
                      timer.onTick(Format_Time(display)).start();

                      BigHintTimer = setTimeout(function (){
                          document.getElementById('giveaway').style.display = 'block';
                      }, #{json_data.time_allocated*1000});*/

            //the testImage function is in the file 'check_photolink.js'
            //i am attempting to test if the link in the database is valid.
            //would like to also add this to the data validation in the game builder before a link is added to the database
            //this is not working right now.
                      /*testImage(document.getElementById("photo_link").attr('src'), function(url, result) {
                        if (result === 'success') {
                          console.log(url)
                          document.getElementById("clue_photo"+click_count_hint).style.display = "block"
                        }
                      }, 10000);*/

            //show one hint at at time with a button
            var click_count_hint = 0;
            document.getElementById("hint"+click_count_hint).style.display = "block" //show first hint by default
            var hintButton = document.getElementById("hint_button");
            var hint = document.getElementById("hint");
            hintButton.onclick = function() {
              click_count_hint++; //show the next hint
              document.getElementById("hint"+click_count_hint).style.display = "block"

            }
          };
        if json_data.logic == "hunt"

            each x, index_x in json_data.qr_codes
                if request == index_x
                  if previous_view == null
                    h3 You have found code number: #{(parseFloat(index_x) + 1)}!
                      p(style='font-size: 35%; margin: 0') Current location: #{x.location}
                  else
                    h3 You have already found this code.
                      p(style='font-size: 35%; margin: 0') Current location: #{x.location}
                  hr.striped-border
                  h4 Here are the clues to find the next code:

                  each y, index_y in json_data.qr_codes
                    if y.hint == "hints"
                      if request == index_y
                        ul(id="hint_list" style='list-style-type:none; padding-left: 10px;')
                          each z, index_z in y.details
                            li
                              p(id!="hint" + index_z class='hide_this') #{z.clue}
                        button(id="hint_button") Hint
                        #clue_photo.clue_image
                          img#photo_link(src=y.photo_link)
                          
                    else if y.hint == "all"
                      if request == index_y
                        ul(style='list-style-type:none; padding-left: 10px;')
                          each z, index_z in y.details
                            li
                              p #{z.clue}
                        #clue_photo.clue_image
                          img#photo_link(src=y.photo_link)


                        /*if json_data.time_allocated <= 0
                          p
                        else if json_data.time_allocated == null
                          p
                        else
                          p Get a hint in #[span(id="time")]*/
